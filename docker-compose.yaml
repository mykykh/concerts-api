services:
  concerts-api-server:
    depends_on:
      - db
      - keycloak
    build:
      context: .
    container_name: concerts-api-server
    hostname: concerts-api-server
    networks:
      - concerts-api-network
    ports:
      - 8080:8080
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      OAUTH_SERVER_HOSTNAME: "http://keycloak:8081/realms/test"
      OAUTH_CLIENT_ID: ${OAUTH_CLIENT_ID}
      OAUTH_CLIENT_SECRET: ${OAUTH_CLIENT_SECRET}
    deploy:
      restart_policy:
        condition: on-failure
  db:
    image: postgres:17-bookworm
    hostname: db
    networks:
      - concerts-api-network
    ports:
      - 5342:5342
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./configs/database/init.sql:/docker-entrypoint-initdb.d/init.sql
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    command: start-dev
    environment:
      KC_HTTP_PORT: 8081
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db/${KEYCLOAK_POSTGRES_DB}
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}
    ports:
      - 8081:8081
    restart: always
    networks:
      - concerts-api-network
    depends_on:
      - keycloak-db
  keycloak-db:
    image: postgres:17-bookworm
    hostname: keycloak-db
    networks:
      - concerts-api-network
    environment:
      POSTGRES_DB: ${KEYCLOAK_POSTGRES_DB}
      POSTGRES_USER: ${KEYCLOAK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD}

networks:
  concerts-api-network:
    driver: bridge
