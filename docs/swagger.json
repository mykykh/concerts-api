{
    "swagger": "2.0",
    "info": {
        "title": "Concerts api",
        "contact": {}
    },
    "paths": {
        "/concerts": {
            "get": {
                "description": "Returns list of 10 last concerts in db oredered by concert_id.\nUse last_id query parameter to select concerts before this last_id",
                "tags": [
                    "Concerts"
                ],
                "summary": "Returns list of concerts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id before which to get last concerts",
                        "name": "last_id",
                        "in": "query"
                    }
                ],
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Creates new concert",
                "parameters": [
                    {
                        "description": "Concert to create",
                        "name": "concert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Concert"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/concerts/{id}": {
            "get": {
                "tags": [
                    "Concerts"
                ],
                "summary": "Returns concert info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Concert id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Updates concert info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Concert id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated concert info",
                        "name": "concert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Concert"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "domain.Concert": {
            "type": "object",
            "properties": {
                "author-id": {
                    "type": "string"
                },
                "create-date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "update-date": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "To obtain token go to [/auth/login](/auth/login). You also need to add Bearer before pasting it belove. It should look like: Bearer your-access-token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}